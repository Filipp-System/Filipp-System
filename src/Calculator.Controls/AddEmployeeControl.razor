@using Calculator.Model
@using Task = System.Threading.Tasks.Task
@using System.Security.Claims
@using Calculator.BaseRepository

@inject ClaimsPrincipal User
@inject IBasicRepository<Employee> Repository
@inject NavigationManager NavigationManager
@inject IPageHelper PageHelper


@if (Employee != null)
{

}

@if (Success)
{
    <br />
    <div class="alert alert-success">Der Mitarbeiter wurde erfolgreich angelegt.</div>
}

@if (Error)
{
    <br />
    <div class="alert alert-danger">Fehler beim Bearbeiten des Mitarbeiter (@ErrorMessage).</div>
}
@code {

    /// <summary>
    /// New <see cref="Employee"/>.
    /// </summary>
    public Employee Employee { get; set; }

    /// <summary>
    /// Avoid concurrent requests.
    /// </summary>
    public bool Busy;

    /// <summary>
    /// Add was successful.
    /// </summary>
    public bool Success;

    /// <summary>
    /// Error resulted from save.
    /// </summary>
    public bool Error;

    /// <summary>
    /// The error message.
    /// </summary>
    public string ErrorMessage = string.Empty;

    /// <summary>
    /// Start with fresh employee.
    /// </summary>
    /// <returns><see cref="Task"/>.</returns>
    protected override Task OnInitializedAsync()
    {
        Employee = new Employee();
        return base.OnInitializedAsync();
    }

    public async Task ValidationResultAsync(bool success)
    {
        if (!success)
        {   
            Success = false;
            Error = false;
            return;
        }

        Busy = true;

        try
        {
            Employee = await Repository.AddAsync(Employee, User);
            Success = true;
            Error = false;
            // ready for the next
            Employee = new Employee();
            Busy = false;
        }
        catch (Exception exception)
        {
            Success = false;
            Error = true;
            ErrorMessage = exception.Message;
            Busy = false;
        }
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo($"/{PageHelper.Page}");
    }

}
